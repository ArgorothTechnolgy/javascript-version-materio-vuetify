{"version":3,"file":"account-settings-cf35f7ba.js","sources":["../../../node_modules/vuetify/lib/components/VSelect/VSelect.mjs","../../../resources/js/views/pages/account-settings/AccountSettingsAccount.vue","../../../resources/js/views/pages/account-settings/AccountSettingsNotification.vue","../../../resources/js/views/pages/account-settings/AccountSettingsSecurity.vue","../../../resources/js/pages/account-settings.vue"],"sourcesContent":["import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VSelect.css\";\n\n// Components\nimport { makeVTextFieldProps } from \"../VTextField/VTextField.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeItemsProps, useItems } from \"../../composables/items.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utility\nimport { computed, mergeProps, ref } from 'vue';\nimport { deepEqual, genericComponent, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown'\n  },\n  menuProps: {\n    type: Object\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText'\n  },\n  openOnClear: Boolean,\n  valueComparator: {\n    type: Function,\n    default: deepEqual\n  },\n  ...makeItemsProps({\n    itemChildren: false\n  })\n}, 'v-select');\nexport const VSelect = genericComponent()({\n  name: 'VSelect',\n  props: {\n    ...makeSelectProps(),\n    ...omit(makeVTextFieldProps({\n      modelValue: null\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({\n      transition: {\n        component: VDialogTransition\n      }\n    })\n  },\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': val => true,\n    'update:menu': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const vMenuRef = ref();\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return;\n        _menu.value = v;\n      }\n    });\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm();\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v;\n      });\n    });\n    const selected = computed(() => selections.value.map(selection => selection.props.value));\n    const isFocused = ref(false);\n    let keyboardLookupPrefix = '';\n    let keyboardLookupLastTime;\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !selections.value.some(s => s === item));\n      }\n      return items.value;\n    });\n    const listRef = ref();\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (props.hideNoData && !items.value.length || props.readonly || form?.isReadonly.value) return;\n      menu.value = !menu.value;\n    }\n    function onKeydown(e) {\n      if (props.readonly || form?.isReadonly.value) return;\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next');\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev');\n      } else if (e.key === 'Home') {\n        listRef.value?.focus('first');\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last');\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      function checkPrintable(e) {\n        const isPrintableChar = e.key.length === 1;\n        const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey;\n        return isPrintableChar && noModifier;\n      }\n      if (props.multiple || !checkPrintable(e)) return;\n      const now = performance.now();\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = '';\n      }\n      keyboardLookupPrefix += e.key.toLowerCase();\n      keyboardLookupLastTime = now;\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix));\n      if (item !== undefined) {\n        model.value = [item];\n      }\n    }\n    function select(item) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value));\n        if (index === -1) {\n          model.value = [...model.value, item];\n        } else {\n          const value = [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        }\n      } else {\n        model.value = [item];\n        menu.value = false;\n      }\n    }\n    function onBlur(e) {\n      if (!listRef.value?.$el.contains(e.relatedTarget)) {\n        menu.value = false;\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onFocusout(e) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots.prepend || slots.append || slots['no-data']);\n      const isDirty = model.value.length > 0;\n      const [textFieldProps] = VTextField.filterProps(props);\n      const placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? undefined : props.placeholder;\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": model.value.map(v => v.props.value).join(', '),\n        \"onUpdate:modelValue\": v => {\n          if (v == null) model.value = [];\n        },\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": $event => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"dirty\": isDirty,\n        \"class\": ['v-select', {\n          'v-select--active-menu': menu.value,\n          'v-select--chips': !!props.chips,\n          [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n          'v-select--selected': model.value.length\n        }, props.class],\n        \"style\": props.style,\n        \"appendInnerIcon\": props.menuIcon,\n        \"readonly\": true,\n        \"placeholder\": placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onBlur\": onBlur,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-select__content\",\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, {\n            \"ref\": listRef,\n            \"selected\": selected.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout\n          }, {\n            default: () => [!displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), slots['prepend-item']?.(), displayItems.value.map((item, index) => {\n              if (slots.item) {\n                return slots.item?.({\n                  item,\n                  index,\n                  props: mergeProps(item.props, {\n                    onClick: () => select(item)\n                  })\n                });\n              }\n              return _createVNode(VListItem, _mergeProps({\n                \"key\": index\n              }, item.props, {\n                \"onClick\": () => select(item)\n              }), {\n                prepend: _ref2 => {\n                  let {\n                    isSelected\n                  } = _ref2;\n                  return props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                    \"modelValue\": isSelected,\n                    \"ripple\": false,\n                    \"tabindex\": \"-1\"\n                  }, null) : undefined;\n                }\n              });\n            }), slots['append-item']?.()]\n          })]\n        }), selections.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": \"v-select__selection\"\n          }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slots.chip?.({\n              item,\n              index,\n              props: slotProps\n            })]\n          }) : slots.selection?.({\n            item,\n            index\n          }) ?? _createVNode(\"span\", {\n            \"class\": \"v-select__selection-text\"\n          }, [item.title, props.multiple && index < selections.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-select__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })])\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      menu,\n      select\n    }, vTextFieldRef);\n  }\n});\n//# sourceMappingURL=VSelect.mjs.map","<script setup>\nimport avatar1 from '@images/avatars/avatar-1.png'\n\nconst accountData = {\n  avatarImg: avatar1,\n  firstName: 'john',\n  lastName: 'Doe',\n  email: 'johnDoe@example.com',\n  org: 'ThemeSelection',\n  phone: '+1 (917) 543-9876',\n  address: '123 Main St, New York, NY 10001',\n  state: 'New York',\n  zip: '10001',\n  country: 'USA',\n  language: 'English',\n  timezone: '(GMT-11:00) International Date Line West',\n  currency: 'USD',\n}\n\nconst refInputEl = ref()\nconst accountDataLocal = ref(structuredClone(accountData))\nconst isAccountDeactivated = ref(false)\n\nconst resetForm = () => {\n  accountDataLocal.value = structuredClone(accountData)\n}\n\nconst changeAvatar = file => {\n  const fileReader = new FileReader()\n  const { files } = file.target\n  if (files && files.length) {\n    fileReader.readAsDataURL(files[0])\n    fileReader.onload = () => {\n      if (typeof fileReader.result === 'string')\n        accountDataLocal.value.avatarImg = fileReader.result\n    }\n  }\n}\n\n// reset avatar image\nconst resetAvatar = () => {\n  accountDataLocal.value.avatarImg = accountData.avatarImg\n}\n\nconst timezones = [\n  '(GMT-11:00) International Date Line West',\n  '(GMT-11:00) Midway Island',\n  '(GMT-10:00) Hawaii',\n  '(GMT-09:00) Alaska',\n  '(GMT-08:00) Pacific Time (US & Canada)',\n  '(GMT-08:00) Tijuana',\n  '(GMT-07:00) Arizona',\n  '(GMT-07:00) Chihuahua',\n  '(GMT-07:00) La Paz',\n  '(GMT-07:00) Mazatlan',\n  '(GMT-07:00) Mountain Time (US & Canada)',\n  '(GMT-06:00) Central America',\n  '(GMT-06:00) Central Time (US & Canada)',\n  '(GMT-06:00) Guadalajara',\n  '(GMT-06:00) Mexico City',\n  '(GMT-06:00) Monterrey',\n  '(GMT-06:00) Saskatchewan',\n  '(GMT-05:00) Bogota',\n  '(GMT-05:00) Eastern Time (US & Canada)',\n  '(GMT-05:00) Indiana (East)',\n  '(GMT-05:00) Lima',\n  '(GMT-05:00) Quito',\n  '(GMT-04:00) Atlantic Time (Canada)',\n  '(GMT-04:00) Caracas',\n  '(GMT-04:00) La Paz',\n  '(GMT-04:00) Santiago',\n  '(GMT-03:30) Newfoundland',\n  '(GMT-03:00) Brasilia',\n  '(GMT-03:00) Buenos Aires',\n  '(GMT-03:00) Georgetown',\n  '(GMT-03:00) Greenland',\n  '(GMT-02:00) Mid-Atlantic',\n  '(GMT-01:00) Azores',\n  '(GMT-01:00) Cape Verde Is.',\n  '(GMT+00:00) Casablanca',\n  '(GMT+00:00) Dublin',\n  '(GMT+00:00) Edinburgh',\n  '(GMT+00:00) Lisbon',\n  '(GMT+00:00) London',\n]\n\nconst currencies = [\n  'USD',\n  'EUR',\n  'GBP',\n  'AUD',\n  'BRL',\n  'CAD',\n  'CNY',\n  'CZK',\n  'DKK',\n  'HKD',\n  'HUF',\n  'INR',\n]\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <VCard title=\"Account Details\">\n        <VCardText class=\"d-flex\">\n          <!-- ð Avatar -->\n          <VAvatar\n            rounded=\"lg\"\n            size=\"100\"\n            class=\"me-6\"\n            :image=\"accountDataLocal.avatarImg\"\n          />\n\n          <!-- ð Upload Photo -->\n          <form class=\"d-flex flex-column justify-center gap-5\">\n            <div class=\"d-flex flex-wrap gap-2\">\n              <VBtn\n                color=\"primary\"\n                @click=\"refInputEl?.click()\"\n              >\n                <VIcon\n                  icon=\"mdi-cloud-upload-outline\"\n                  class=\"d-sm-none\"\n                />\n                <span class=\"d-none d-sm-block\">Upload new photo</span>\n              </VBtn>\n\n              <input\n                ref=\"refInputEl\"\n                type=\"file\"\n                name=\"file\"\n                accept=\".jpeg,.png,.jpg,GIF\"\n                hidden\n                @input=\"changeAvatar\"\n              >\n\n              <VBtn\n                type=\"reset\"\n                color=\"error\"\n                variant=\"tonal\"\n                @click=\"resetAvatar\"\n              >\n                <span class=\"d-none d-sm-block\">Reset</span>\n                <VIcon\n                  icon=\"mdi-refresh\"\n                  class=\"d-sm-none\"\n                />\n              </VBtn>\n            </div>\n\n            <p class=\"text-body-1 mb-0\">\n              Allowed JPG, GIF or PNG. Max size of 800K\n            </p>\n          </form>\n        </VCardText>\n\n        <VDivider />\n\n        <VCardText>\n          <!-- ð Form -->\n          <VForm class=\"mt-6\">\n            <VRow>\n              <!-- ð First Name -->\n              <VCol\n                md=\"6\"\n                cols=\"12\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.firstName\"\n                  label=\"First Name\"\n                />\n              </VCol>\n\n              <!-- ð Last Name -->\n              <VCol\n                md=\"6\"\n                cols=\"12\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.lastName\"\n                  label=\"Last Name\"\n                />\n              </VCol>\n\n              <!-- ð Email -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.email\"\n                  label=\"E-mail\"\n                  type=\"email\"\n                />\n              </VCol>\n\n              <!-- ð Organization -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.org\"\n                  label=\"Organization\"\n                />\n              </VCol>\n\n              <!-- ð Phone -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.phone\"\n                  label=\"Phone Number\"\n                />\n              </VCol>\n\n              <!-- ð Address -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.address\"\n                  label=\"Address\"\n                />\n              </VCol>\n\n              <!-- ð State -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.state\"\n                  label=\"State\"\n                />\n              </VCol>\n\n              <!-- ð Zip Code -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VTextField\n                  v-model=\"accountDataLocal.zip\"\n                  label=\"Zip Code\"\n                />\n              </VCol>\n\n              <!-- ð Country -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VSelect\n                  v-model=\"accountDataLocal.country\"\n                  label=\"Country\"\n                  :items=\"['USA', 'Canada', 'UK', 'India', 'Australia']\"\n                />\n              </VCol>\n\n              <!-- ð Language -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VSelect\n                  v-model=\"accountDataLocal.language\"\n                  label=\"Language\"\n                  :items=\"['English', 'Spanish', 'Arabic', 'Hindi', 'Urdu']\"\n                />\n              </VCol>\n\n              <!-- ð Timezone -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VSelect\n                  v-model=\"accountDataLocal.timezone\"\n                  label=\"Timezone\"\n                  :items=\"timezones\"\n                  :menu-props=\"{ maxHeight: 200 }\"\n                />\n              </VCol>\n\n              <!-- ð Currency -->\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <VSelect\n                  v-model=\"accountDataLocal.currency\"\n                  label=\"Currency\"\n                  :items=\"currencies\"\n                  :menu-props=\"{ maxHeight: 200 }\"\n                />\n              </VCol>\n\n              <!-- ð Form Actions -->\n              <VCol\n                cols=\"12\"\n                class=\"d-flex flex-wrap gap-4\"\n              >\n                <VBtn>Save changes</VBtn>\n\n                <VBtn\n                  color=\"secondary\"\n                  variant=\"tonal\"\n                  type=\"reset\"\n                  @click.prevent=\"resetForm\"\n                >\n                  Reset\n                </VBtn>\n              </VCol>\n            </VRow>\n          </VForm>\n        </VCardText>\n      </VCard>\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- ð Deactivate Account -->\n      <VCard title=\"Deactivate Account\">\n        <VCardText>\n          <div>\n            <VCheckbox\n              v-model=\"isAccountDeactivated\"\n              label=\"I confirm my account deactivation\"\n            />\n          </div>\n\n          <VBtn\n            :disabled=\"!isAccountDeactivated\"\n            color=\"error\"\n            class=\"mt-3\"\n          >\n            Deactivate Account\n          </VBtn>\n        </VCardText>\n      </VCard>\n    </VCol>\n  </VRow>\n</template>\n","<script setup>\nconst recentDevices = ref([\n  {\n    type: 'New for you',\n    email: true,\n    browser: true,\n    app: true,\n  },\n  {\n    type: 'Account activity',\n    email: true,\n    browser: true,\n    app: true,\n  },\n  {\n    type: 'A new browser used to sign in',\n    email: true,\n    browser: true,\n    app: false,\n  },\n  {\n    type: 'A new device is linked',\n    email: true,\n    browser: false,\n    app: false,\n  },\n])\n\nconst selectedNotification = ref('Only when I\\'m online')\n</script>\n\n<template>\n  <VCard title=\"Recent Devices\">\n    <VCardText>\n      We need permission from your browser to show notifications.\n      <a href=\"javascript:void(0)\">Request Permission</a>\n    </VCardText>\n\n    <VTable class=\"text-no-wrap\">\n      <thead>\n        <tr>\n          <th scope=\"col\">\n            Type\n          </th>\n          <th scope=\"col\">\n            EMAIL\n          </th>\n          <th scope=\"col\">\n            BROWSER\n          </th>\n          <th scope=\"col\">\n            App\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for=\"device in recentDevices\"\n          :key=\"device.type\"\n        >\n          <td>\n            {{ device.type }}\n          </td>\n          <td>\n            <VCheckbox v-model=\"device.email\" />\n          </td>\n          <td>\n            <VCheckbox v-model=\"device.browser\" />\n          </td>\n          <td>\n            <VCheckbox v-model=\"device.app\" />\n          </td>\n        </tr>\n      </tbody>\n    </VTable>\n    <VDivider />\n\n    <VCardText>\n      <VForm @submit.prevent=\"() => {}\">\n        <p class=\"text-base font-weight-medium\">\n          When should we send you notifications?\n        </p>\n\n        <VRow>\n          <VCol\n            cols=\"12\"\n            sm=\"6\"\n          >\n            <VSelect\n              v-model=\"selectedNotification\"\n              mandatory\n              :items=\"['Only when I\\'m online', 'Anytime']\"\n            />\n          </VCol>\n        </VRow>\n\n        <div class=\"d-flex flex-wrap gap-4 mt-4\">\n          <VBtn type=\"submit\">\n            Save Changes\n          </VBtn>\n          <VBtn\n            color=\"secondary\"\n            variant=\"tonal\"\n            type=\"reset\"\n          >\n            Reset\n          </VBtn>\n        </div>\n      </VForm>\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nconst isCurrentPasswordVisible = ref(false)\nconst isNewPasswordVisible = ref(false)\nconst isConfirmPasswordVisible = ref(false)\nconst currentPassword = ref('12345678')\nconst newPassword = ref('87654321')\nconst confirmPassword = ref('87654321')\n\nconst passwordRequirements = [\n  'Minimum 8 characters long - the more, the better',\n  'At least one lowercase character',\n  'At least one number, symbol, or whitespace character',\n]\n\nconst serverKeys = [\n  {\n    name: 'Server Key 1',\n    key: '23eaf7f0-f4f7-495e-8b86-fad3261282ac',\n    createdOn: '28 Apr 2021, 18:20 GTM+4:10',\n    permission: 'Full Access',\n  },\n  {\n    name: 'Server Key 2',\n    key: 'bb98e571-a2e2-4de8-90a9-2e231b5e99',\n    createdOn: '12 Feb 2021, 10:30 GTM+2:30',\n    permission: 'Read Only',\n  },\n  {\n    name: 'Server Key 3',\n    key: '2e915e59-3105-47f2-8838-6e46bf83b711',\n    createdOn: '28 Dec 2020, 12:21 GTM+4:10',\n    permission: 'Full Access',\n  },\n]\n\nconst recentDevices = [\n  {\n    browser: 'Chrome on Windows',\n    device: 'HP Spectre 360',\n    location: 'New York, NY',\n    recentActivity: '28 Apr 2022, 18:20',\n    deviceIcon: {\n      icon: 'mdi-microsoft-windows',\n      color: 'primary',\n    },\n  },\n  {\n    browser: 'Chrome on iPhone',\n    device: 'iPhone 12x',\n    location: 'Los Angeles, CA',\n    recentActivity: '20 Apr 2022, 10:20',\n    deviceIcon: {\n      icon: 'mdi-cellphone',\n      color: 'error',\n    },\n  },\n  {\n    browser: 'Chrome on Android',\n    device: 'Oneplus 9 Pro',\n    location: 'San Francisco, CA',\n    recentActivity: '16 Apr 2022, 04:20',\n    deviceIcon: {\n      icon: 'mdi-android',\n      color: 'success',\n    },\n  },\n  {\n    browser: 'Chrome on MacOS',\n    device: 'Apple iMac',\n    location: 'New York, NY',\n    recentActivity: '28 Apr 2022, 18:20',\n    deviceIcon: {\n      icon: 'mdi-apple',\n      color: 'secondary',\n    },\n  },\n  {\n    browser: 'Chrome on Windows',\n    device: 'HP Spectre 360',\n    location: 'Los Angeles, CA',\n    recentActivity: '20 Apr 2022, 10:20',\n    deviceIcon: {\n      icon: 'mdi-microsoft-windows',\n      color: 'primary',\n    },\n  },\n  {\n    browser: 'Chrome on Android',\n    device: 'Oneplus 9 Pro',\n    location: 'San Francisco, CA',\n    recentActivity: '16 Apr 2022, 04:20',\n    deviceIcon: {\n      icon: 'mdi-android',\n      color: 'success',\n    },\n  },\n]\n</script>\n\n<template>\n  <VRow>\n    <!-- SECTION: Change Password -->\n    <VCol cols=\"12\">\n      <VCard title=\"Change Password\">\n        <VForm>\n          <VCardText>\n            <!-- ð Current Password -->\n            <VRow class=\"mb-3\">\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <!-- ð current password -->\n                <VTextField\n                  v-model=\"currentPassword\"\n                  :type=\"isCurrentPasswordVisible ? 'text' : 'password'\"\n                  :append-inner-icon=\"isCurrentPasswordVisible ? 'mdi-eye-off-outline' : 'mdi-eye-outline'\"\n                  label=\"Current Password\"\n                  @click:append-inner=\"isCurrentPasswordVisible = !isCurrentPasswordVisible\"\n                />\n              </VCol>\n            </VRow>\n\n            <!-- ð New Password -->\n            <VRow>\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <!-- ð new password -->\n                <VTextField\n                  v-model=\"newPassword\"\n                  :type=\"isNewPasswordVisible ? 'text' : 'password'\"\n                  :append-inner-icon=\"isNewPasswordVisible ? 'mdi-eye-off-outline' : 'mdi-eye-outline'\"\n                  label=\"New Password\"\n                  @click:append-inner=\"isNewPasswordVisible = !isNewPasswordVisible\"\n                />\n              </VCol>\n\n              <VCol\n                cols=\"12\"\n                md=\"6\"\n              >\n                <!-- ð confirm password -->\n                <VTextField\n                  v-model=\"confirmPassword\"\n                  :type=\"isConfirmPasswordVisible ? 'text' : 'password'\"\n                  :append-inner-icon=\"isConfirmPasswordVisible ? 'mdi-eye-off-outline' : 'mdi-eye-outline'\"\n                  label=\"Confirm New Password\"\n                  @click:append-inner=\"isConfirmPasswordVisible = !isConfirmPasswordVisible\"\n                />\n              </VCol>\n            </VRow>\n          </VCardText>\n\n          <!-- ð Password Requirements -->\n          <VCardText>\n            <p class=\"text-base font-weight-medium mt-2\">\n              Password Requirements:\n            </p>\n\n            <ul class=\"d-flex flex-column gap-y-3\">\n              <li\n                v-for=\"item in passwordRequirements\"\n                :key=\"item\"\n                class=\"d-flex\"\n              >\n                <div>\n                  <VIcon\n                    size=\"7\"\n                    icon=\"mdi-circle\"\n                    class=\"me-3\"\n                  />\n                </div>\n                <span class=\"font-weight-medium\">{{ item }}</span>\n              </li>\n            </ul>\n          </VCardText>\n\n          <!-- ð Action Buttons -->\n          <VCardText class=\"d-flex flex-wrap gap-4\">\n            <VBtn>Save changes</VBtn>\n\n            <VBtn\n              type=\"reset\"\n              color=\"secondary\"\n              variant=\"tonal\"\n            >\n              Reset\n            </VBtn>\n          </VCardText>\n        </VForm>\n      </VCard>\n    </VCol>\n    <!-- !SECTION -->\n\n    <!-- SECTION Two-steps verification -->\n    <VCol cols=\"12\">\n      <VCard title=\"Two-steps verification\">\n        <VCardText>\n          <p class=\"font-weight-semibold\">\n            Two factor authentication is not enabled yet.\n          </p>\n          <p>\n            Two-factor authentication adds an additional layer of security to your account by requiring more than just a password to log in.\n            <a\n              href=\"javascript:void(0)\"\n              class=\"text-decoration-none\"\n            >Learn more.</a>\n          </p>\n\n          <VBtn>\n            Enable two-factor authentication\n          </VBtn>\n        </VCardText>\n      </VCard>\n    </VCol>\n    <!-- !SECTION -->\n\n    <VCol cols=\"12\">\n      <!-- SECTION: Create an API key -->\n      <VCard title=\"Create an API key\">\n        <VRow>\n          <!-- ð Choose API Key -->\n          <VCol\n            cols=\"12\"\n            md=\"5\"\n            order-md=\"0\"\n            order=\"1\"\n          >\n            <VCardText>\n              <VForm @submit.prevent=\"() => {}\">\n                <VRow>\n                  <!-- ð Choose API Key -->\n                  <VCol cols=\"12\">\n                    <VSelect\n                      label=\"Choose the API key type you want to create\"\n                      :items=\"['Full Control', 'Modify', 'Read & Execute', 'List Folder Contents', 'Read Only', 'Read & Write']\"\n                    />\n                  </VCol>\n\n                  <!-- ð Name the API Key -->\n                  <VCol cols=\"12\">\n                    <VTextField label=\"Name the API key\" />\n                  </VCol>\n\n                  <!-- ð Create Key Button -->\n                  <VCol cols=\"12\">\n                    <VBtn\n                      type=\"submit\"\n                      block\n                    >\n                      Create Key\n                    </VBtn>\n                  </VCol>\n                </VRow>\n              </VForm>\n            </VCardText>\n          </VCol>\n        </VRow>\n      </VCard>\n    <!-- !SECTION -->\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- SECTION: API Keys List -->\n      <VCard title=\"API Key List &amp; Access\">\n        <VCardText>\n          An API key is a simple encrypted string that identifies an application without any principal. They are useful for accessing public data anonymously, and are used to associate API requests with your project for quota and billing.\n        </VCardText>\n\n        <!-- ð Server Status -->\n        <VCardText class=\"d-flex flex-column gap-y-4\">\n          <div\n            v-for=\"serverKey in serverKeys\"\n            :key=\"serverKey.key\"\n            class=\"bg-var-theme-background pa-4\"\n          >\n            <div class=\"d-flex align-center flex-wrap mb-3\">\n              <h6 class=\"text-h6 mb-0 me-3\">\n                {{ serverKey.name }}\n              </h6>\n              <VChip\n                label\n                color=\"primary\"\n                size=\"small\"\n              >\n                {{ serverKey.permission }}\n              </VChip>\n            </div>\n            <p class=\"text-base font-weight-medium\">\n              <span class=\"me-3\">{{ serverKey.key }}</span>\n              <VIcon\n                :size=\"18\"\n                icon=\"mdi-content-copy\"\n                class=\"cursor-pointer\"\n              />\n            </p>\n            <span>Created on {{ serverKey.createdOn }}</span>\n          </div>\n        </VCardText>\n      </VCard>\n      <!-- !SECTION -->\n    </VCol>\n\n    <!-- SECTION Recent Devices -->\n    <VCol cols=\"12\">\n      <!-- ð Table -->\n      <VCard title=\"Recent Devices\">\n        <VTable class=\"text-no-wrap\">\n          <thead>\n            <tr>\n              <th scope=\"col\">\n                BROWSER\n              </th>\n              <th scope=\"col\">\n                DEVICE\n              </th>\n              <th scope=\"col\">\n                LOCATION\n              </th>\n              <th scope=\"col\">\n                RECENT ACTIVITIES\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              v-for=\"device in recentDevices\"\n              :key=\"device.recentActivity\"\n            >\n              <td>\n                <VIcon\n                  start\n                  :icon=\"device.deviceIcon.icon\"\n                  :color=\"device.deviceIcon.color\"\n                />\n                {{ device.browser }}\n              </td>\n              <td>{{ device.device }}</td>\n              <td>{{ device.location }}</td>\n              <td>{{ device.recentActivity }}</td>\n            </tr>\n          </tbody>\n        </VTable>\n      </VCard>\n    </VCol>\n    <!-- !SECTION -->\n  </VRow>\n</template>\n","<script setup>\nimport { useRoute } from 'vue-router'\nimport AccountSettingsAccount from '@/views/pages/account-settings/AccountSettingsAccount.vue'\nimport AccountSettingsNotification from '@/views/pages/account-settings/AccountSettingsNotification.vue'\nimport AccountSettingsSecurity from '@/views/pages/account-settings/AccountSettingsSecurity.vue'\n\nconst route = useRoute()\nconst activeTab = ref(route.params.tab)\n\n// tabs\nconst tabs = [\n  {\n    title: 'Account',\n    icon: 'mdi-account-outline',\n    tab: 'account',\n  },\n  {\n    title: 'Security',\n    icon: 'mdi-lock-open-outline',\n    tab: 'security',\n  },\n  {\n    title: 'Notifications',\n    icon: 'mdi-bell-outline',\n    tab: 'notification',\n  },\n]\n</script>\n\n<template>\n  <div>\n    <VTabs\n      v-model=\"activeTab\"\n      show-arrows\n    >\n      <VTab\n        v-for=\"item in tabs\"\n        :key=\"item.icon\"\n        :value=\"item.tab\"\n      >\n        <VIcon\n          size=\"20\"\n          start\n          :icon=\"item.icon\"\n        />\n        {{ item.title }}\n      </VTab>\n    </VTabs>\n    <VDivider />\n\n    <VWindow\n      v-model=\"activeTab\"\n      class=\"mt-5 disable-tab-transition\"\n    >\n      <!-- Account -->\n      <VWindowItem value=\"account\">\n        <AccountSettingsAccount />\n      </VWindowItem>\n\n      <!-- Security -->\n      <VWindowItem value=\"security\">\n        <AccountSettingsSecurity />\n      </VWindowItem>\n\n      <!-- Notification -->\n      <VWindowItem value=\"notification\">\n        <AccountSettingsNotification />\n      </VWindowItem>\n    </VWindow>\n  </div>\n</template>\n"],"names":["makeSelectProps","propsFactory","IconValue","deepEqual","makeItemsProps","VSelect","genericComponent","omit","makeVTextFieldProps","makeTransitionProps","VDialogTransition","focused","val","props","_ref","slots","t","useLocale","vTextFieldRef","ref","vMenuRef","_menu","useProxiedModel","menu","computed","v","_a","items","transformIn","transformOut","useItems","model","wrapInArray","transformed","form","useForm","selections","item","selected","selection","isFocused","keyboardLookupPrefix","keyboardLookupLastTime","displayItems","s","listRef","onClear","e","onMousedownControl","onKeydown","_b","_c","_d","KEYBOARD_LOOKUP_THRESHOLD","checkPrintable","isPrintableChar","noModifier","now","select","index","value","onBlur","onFocusin","onFocusout","useRender","hasChips","hasList","isDirty","textFieldProps","VTextField","placeholder","_createVNode","_mergeProps","$event","_Fragment","VMenu","VList","VListItem","mergeProps","_ref2","isSelected","VCheckboxBtn","onChipClose","slotProps","VDefaultsProvider","VChip","_createTextVNode","forwardRefs","accountData","avatar1","refInputEl","accountDataLocal","isAccountDeactivated","resetForm","changeAvatar","file","fileReader","files","resetAvatar","timezones","currencies","recentDevices","selectedNotification","isCurrentPasswordVisible","isNewPasswordVisible","isConfirmPasswordVisible","currentPassword","newPassword","confirmPassword","passwordRequirements","serverKeys","route","useRoute","activeTab","tabs"],"mappings":"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ACe,EAAiB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/B,CAAA,CAAC,CAAC,CACX,CAAO,CACP,CAAK,EACMC,GAAY,CACjB,UAAA/C,EACA,KAAAjB,EACA,OAAAmC,CACD,EAAExC,CAAa,CACjB,CACH,CAAC,iVChUD,MAAAsE,EAAA,CACA,UAAAC,GACA,UAAA,OACA,SAAA,MACA,MAAA,sBACA,IAAA,iBACA,MAAA,oBACA,QAAA,kCACA,MAAA,WACA,IAAA,QACA,QAAA,MACA,SAAA,UACA,SAAA,2CACA,SAAA,KACA,EAEAC,EAAAvE,EAAA,EACAwE,EAAAxE,EAAA,gBAAAqE,CAAA,CAAA,EACAI,EAAAzE,EAAA,EAAA,EAEA0E,EAAA,IAAA,CACAF,EAAA,MAAA,gBAAAH,CAAA,CACA,EAEAM,EAAAC,GAAA,CACA,MAAAC,EAAA,IAAA,WACA,CAAA,MAAAC,GAAAF,EAAA,OACAE,GAAAA,EAAA,SACAD,EAAA,cAAAC,EAAA,CAAA,CAAA,EACAD,EAAA,OAAA,IAAA,CACA,OAAAA,EAAA,QAAA,WACAL,EAAA,MAAA,UAAAK,EAAA,OACA,EAEA,EAGAE,EAAA,IAAA,CACAP,EAAA,MAAA,UAAAH,EAAA,SACA,EAEAW,EAAA,CACA,2CACA,4BACA,qBACA,qBACA,yCACA,sBACA,sBACA,wBACA,qBACA,uBACA,0CACA,8BACA,yCACA,0BACA,0BACA,wBACA,2BACA,qBACA,yCACA,6BACA,mBACA,oBACA,qCACA,sBACA,qBACA,uBACA,2BACA,uBACA,2BACA,yBACA,wBACA,2BACA,qBACA,6BACA,yBACA,qBACA,wBACA,qBACA,oBACA,EAEAC,EAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,mjIClGA,MAAAC,EAAAlF,EAAA,CACA,CACA,KAAA,cACA,MAAA,GACA,QAAA,GACA,IAAA,EACA,EACA,CACA,KAAA,mBACA,MAAA,GACA,QAAA,GACA,IAAA,EACA,EACA,CACA,KAAA,gCACA,MAAA,GACA,QAAA,GACA,IAAA,EACA,EACA,CACA,KAAA,yBACA,MAAA,GACA,QAAA,GACA,IAAA,EACA,CACA,CAAA,EAEAmF,EAAAnF,EAAA,sBAAA,8hEC3BA,MAAAoF,EAAApF,EAAA,EAAA,EACAqF,EAAArF,EAAA,EAAA,EACAsF,EAAAtF,EAAA,EAAA,EACAuF,EAAAvF,EAAA,UAAA,EACAwF,EAAAxF,EAAA,UAAA,EACAyF,EAAAzF,EAAA,UAAA,EAEA0F,EAAA,CACA,mDACA,mCACA,sDACA,EAEAC,EAAA,CACA,CACA,KAAA,eACA,IAAA,uCACA,UAAA,8BACA,WAAA,aACA,EACA,CACA,KAAA,eACA,IAAA,qCACA,UAAA,8BACA,WAAA,WACA,EACA,CACA,KAAA,eACA,IAAA,uCACA,UAAA,8BACA,WAAA,aACA,CACA,EAEAT,EAAA,CACA,CACA,QAAA,oBACA,OAAA,iBACA,SAAA,eACA,eAAA,qBACA,WAAA,CACA,KAAA,wBACA,MAAA,SACA,CACA,EACA,CACA,QAAA,mBACA,OAAA,aACA,SAAA,kBACA,eAAA,qBACA,WAAA,CACA,KAAA,gBACA,MAAA,OACA,CACA,EACA,CACA,QAAA,oBACA,OAAA,gBACA,SAAA,oBACA,eAAA,qBACA,WAAA,CACA,KAAA,cACA,MAAA,SACA,CACA,EACA,CACA,QAAA,kBACA,OAAA,aACA,SAAA,eACA,eAAA,qBACA,WAAA,CACA,KAAA,YACA,MAAA,WACA,CACA,EACA,CACA,QAAA,oBACA,OAAA,iBACA,SAAA,kBACA,eAAA,qBACA,WAAA,CACA,KAAA,wBACA,MAAA,SACA,CACA,EACA,CACA,QAAA,oBACA,OAAA,gBACA,SAAA,oBACA,eAAA,qBACA,WAAA,CACA,KAAA,cACA,MAAA,SACA,CACA,CACA,u2HC1FA,MAAAU,EAAAC,GAAA,EACAC,EAAA9F,EAAA4F,EAAA,OAAA,GAAA,EAGAG,EAAA,CACA,CACA,MAAA,UACA,KAAA,sBACA,IAAA,SACA,EACA,CACA,MAAA,WACA,KAAA,wBACA,IAAA,UACA,EACA,CACA,MAAA,gBACA,KAAA,mBACA,IAAA,cACA,CACA","x_google_ignoreList":[0]}